geom_bar(aes(fill=predicted_sentiment_indice), stat="identity")
plot(gg2)
q = melt(data)
q
data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())
unique(retweet_range)
unique(data$retweet_count)
is.na(data$retweet_count)
any(is.na(data$retweet_count))
data$retweet_count
data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity")
plot(gg2)
retweet_stats = data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, group=predicted_sentiment_indice)) +
geom_bar(stat="identity")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, group=predicted_sentiment_indice)) +
geom_bar(stat="identity", ,position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", ,position='dodge')
plot(gg2)
retweet_stats
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, fill=predicted_sentiment_indice)) +
geom_histogram(stat="identity", ,position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=n, fill=predicted_sentiment_indice)) +
geom_histogram(stat="count", ,position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=predicted_sentiment_indice)) +
geom_histogram(stat="count", ,position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_histogram(stat="count", ,position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_histogram(stat="count", ,position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_histogram(stat="count")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_histogram(stat="count",position='dodge')
plot(gg2)
data$retweet_range <- cut(data$retweet_count, breaks=c(-1, 10, 100, 500, 1000, 5000, 10000, 50000, 100000, 200000, Inf))
unique(data$retweet_range)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_histogram(stat="count",position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_histogram(stat="count",position='dodge')
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range)) +
geom_histogram(aes(fill=predicted_sentiment_indice), bins=3)
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range)) +
geom_histogram(aes(fill=predicted_sentiment_indice), stat="count")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range)) +
geom_bar(aes(fill=predicted_sentiment_indice), stat="count")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_bar(stat="count")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge", color=predicted_sentiment_indice)
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge", color=group)
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
scale_fill_brewer(palette="Dark2")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_histogram(position="dodge")
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_histogram(stat=count, position="dodge")
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, fill=predicted_sentiment_indice)) +
geom_histogram(stat="count", position="dodge")
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
data = data %>% mutate(predicted_sentiment_indice = case_when(predicted_sentiment_indice == 0 ~ "Negative"
predicted_sentiment_indice == 1 ~ "Neutral",
predicted_sentiment_indice == 0 ~ "Positive"))
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
retweet_stats = data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())
data = data %>% mutate(predicted_sentiment_indice = case_when(predicted_sentiment_indice == 0 ~ "Negative",
predicted_sentiment_indice == 1 ~ "Neutral",
predicted_sentiment_indice == 0 ~ "Positive"))
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
library(dplyr)
library(ggplot2)
library(foreach)
library(tidyverse)
library(data.table)
library(viridis)
setwd("~/Desktop/Team-ZeroLoss/data/hydrated_data_ieee/final_data")
data = read.csv("shallow_processed_with_prediction.csv")
data$date = gsub("Mar ", "03-", data$date)
data$date = gsub("Apr ", "04-", data$date)
data$date = gsub("May ", "05-", data$date)
data$date = gsub("Jun ", "06-", data$date)
data = data %>% mutate(textblob_hard = case_when(sentiment_score > 0 ~ 2,
sentiment_score == 0 ~ 1,
sentiment_score < 0 ~ 0))
my_data = aggregate(x = data$predicted_sentiment_indice, by=list(data$date), FUN=mean)
colnames(my_data) = c("date", "score")
setwd("~/Desktop/Team-ZeroLoss/result")
theme_set(theme_bw())
gg <- ggplot(data=my_data, aes(x=date, y=score, group=1)) +
geom_line(size=0.4, color="black")+
geom_point(size=2, aes(color=score)) +
scale_color_viridis(option = "D") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title="Average Predicted Scores by Dates") +
ylab("mean of predicted scores")
plot(gg)
data$retweet_range <- cut(data$retweet_count, breaks=c(-1, 10, 100, 500, 1000, 5000, 10000, 50000, 100000, 200000, Inf))
retweet_stats = data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())
data = data %>% mutate(predicted_sentiment_indice = case_when(predicted_sentiment_indice == 0 ~ "Negative",
predicted_sentiment_indice == 1 ~ "Neutral",
predicted_sentiment_indice == 2 ~ "Positive"))
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=data, aes(x=retweet_range, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges")
plot(gg2)
retweet_stats
hist(retweet_stats)
data = data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% summarise() %>% mutate(freq=n/sum(n))
data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% summarise() %>% mutate(freq=n/sum(n))
data %>% group_by(retweet_count, predicted_sentiment_indice) %>% summarise() %>% mutate(freq=n/sum(n))
data %>% group_by(retweet_count, predicted_sentiment_indice) %>% summarise(n=n()) %>% mutate(freq=n/sum(n))
retweet_stats = data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
data = data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% mutate()
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges")
plot(gg2)
data = data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% mutate()
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges")
plot(gg2)
data = data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% mutate()
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges")
plot(gg2)
data = data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% mutate()
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
data = data %>% group_by(retweet_stats, predicted_sentiment_indice) %>% mutate()
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges") +
guides(fill=guide_legend("predicted sentiment"))
ylab("class fraction within the retweet range")
plot(gg2)
retweet_stats
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges") +
guides(fill=guide_legend("predicted sentiment"))
ylab("class fraction within the retweet range")
plot(gg2)
# retweet count
data$retweet_range <- cut(data$retweet_count, breaks=c(-1, 10, 100, 500, 1000, 5000, 10000, 50000, 100000, 200000, Inf))
retweet_stats = data %>% group_by(retweet_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=retweet_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by Retweet Count Ranges") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the retweet range")
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, y=n, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
# default profile
profile_stats = data %>% group_by(user.default_profile, predicted_sentiment_indice) %>% summarise(n=n())
theme_set(theme_classic())
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, y=n, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
profile_stats = data %>% group_by(user.default_profile, predicted_sentiment_indice) %>% summarise(n=n())
theme_set(theme_classic())
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="count", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
profile_stats
theme_set(theme_classic())
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, y=n, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
# default profile
profile_stats = data %>% group_by(user.default_profile, predicted_sentiment_indice) %>% summarise(n=n())  %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
profile_stats
# default profile
profile_stats = data %>% group_by(user.default_profile, predicted_sentiment_indice) %>% summarise(n=n())  %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
profile_stats
data$predicted_sentiment_indice
# default profile
profile_stats = data %>% group_by(user.default_profile, predicted_sentiment_indice) %>% summarise(n=n()) %>% mutate(freq=n/sum(n))
profile_stats
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment"))
plot(gg2)
theme_set(theme_classic())
gg2 <- ggplot(data=profile_stats, aes(x=user.default_profile, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.default_profile") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
data$user.screen_name
data$user.created_at
substring(data$user.created_at, 26, 30)
data$year = substring(data$user.created_at, 26, 30)
# created_at
year_stats = data %>% group_by(user.default_profile, predicted_sentiment_indice) %>% summarise(n=n()) %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=year_stats, aes(x=user.default_profile, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.created_at") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
year_stats = data %>% group_by(year, predicted_sentiment_indice) %>% summarise(n=n()) %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=year_stats, aes(x=year, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.created_at") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
# followers_count
data$follower_range <- cut(data$retweet_count, breaks=c(-1, 500, 5000, 20000, 50000, 200000, 500000, Inf))
follower_stats = data %>% group_by(follower_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=retweet_stats, aes(x=follower_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.folowers_count") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the retweet range")
plot(gg2)
# followers_count
data$follower_range <- cut(data$retweet_count, breaks=c(-1, 500, 5000, 20000, 50000, 200000, 500000, Inf))
data$follower_range
unique(data$follower_range)
# followers_count
data$follower_range <- cut(data$retweet_count, breaks=c(-1, 500, 5000, 20000, 50000, 200000, 500000, Inf))
follower_stats = data %>% group_by(follower_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=follower_stats, aes(x=follower_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.folowers_count") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the retweet range")
plot(gg2)
format(data$follower_range, scientific = F)
follower_stats = data %>% group_by(follower_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=follower_stats, aes(x=follower_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.folowers_count") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the retweet range")
plot(gg2)
data$follower_range
format(data$follower_range, scientific = F)
theme_set(theme_classic())
gg2 <- ggplot(data=follower_stats, aes(x=follower_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by user.folowers_count") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
data = read.csv("shallow_processed_with_prediction.csv")
setwd("~/Desktop/Team-ZeroLoss/data/hydrated_data_ieee/final_data")
data = read.csv("shallow_processed_with_prediction.csv")
colnames(data)
# username_contains_emoji
data$user_emoji = data$username_contains_emoji | data$userscreenname_contains_emoji
user_stats = data %>% group_by(user_emoji, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats, aes(x=user_emoji, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
# username_contains_emoji
data$user_emoji = data$username_contains_emoji | data$userscreenname_contains_emoji
any(data$username_contains_emoji, data$userscreenname_contains_emoji)
# username_contains_emoji
user_emoji = cbind(data$username_contains_emojidata$userscreenname_contains_emoji) %>% apply(1, any)
# username_contains_emoji
user_emoji = cbind(data$username_contains_emojidata$userscreenname_contains_emoji) %>% apply(dim=1, any)
# username_contains_emoji
user_emoji = cbind(data$username_contains_emojidata$userscreenname_contains_emoji) %>% apply(dim=1, FUN=any)
# username_contains_emoji
user_emoji = apply(cbind(data$username_contains_emojidata$userscreenname_contains_emoji), 1, any)
# username_contains_emoji
user_emoji = apply(cbind(data$username_contains_emoji, data$userscreenname_contains_emoji), 1, any)
user_emoji
table(user_emoji)
table(data$username_contains_emoji)
table(data$userscreenname_contains_emoji)
# username_contains_emoji
user_stats = data %>% group_by(data$username_contains_emoji, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats, aes(x=user_emoji, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
user_stats
user_stats = data %>% group_by(username_contains_emoji, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats, aes(x=user_emoji, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
user_stats
# username_contains_emoji
user_stats = data %>% group_by(username_contains_emoji, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats, aes(x=username_contains_emoji, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
data = read.csv("shallow_processed_with_prediction.csv")
data$date = gsub("Mar ", "03-", data$date)
data$date = gsub("Apr ", "04-", data$date)
data$date = gsub("May ", "05-", data$date)
data$date = gsub("Jun ", "06-", data$date)
data$year = substring(data$user.created_at, 26, 30)
data = data %>% mutate(predicted_sentiment_indice = case_when(predicted_sentiment_indice == 0 ~ "Negative",
predicted_sentiment_indice == 1 ~ "Neutral",
predicted_sentiment_indice == 2 ~ "Positive"))
data = data %>% mutate(textblob_hard = case_when(sentiment_score > 0 ~ 2,
sentiment_score == 0 ~ 1,
sentiment_score < 0 ~ 0))
# username_contains_emoji
user_stats = data %>% group_by(username_contains_emoji, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats, aes(x=username_contains_emoji, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
colnames(data)
# userdescription_contains_emoji
user_stats2 = data %>% group_by(userdescription_contains_emoji, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats2, aes(x=userdescription_contains_emoji, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
colnames(data)
data$user.statuses_count
max(data$user.statuses_count)
min(data$user.statuses_count)
# user.statuses_count
data$status_range <- cut(data$user.statuses_count, breaks=c(-1, 500, 5000, 20000, 50000, 200000, 500000, Inf))
user_stats3 = data %>% group_by(status_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats3, aes(x=status_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment by whether username constains emoji") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
# user.statuses_count
data$status_range <- cut(data$user.statuses_count, breaks=c(-1, 500, 5000, 20000, 50000, 200000, 500000, Inf))
user_stats3 = data %>% group_by(status_range, predicted_sentiment_indice) %>% summarise(n=n())  %>% mutate(freq=n/sum(n))
theme_set(theme_classic())
gg2 <- ggplot(data=user_stats3, aes(x=status_range, y=freq, group=predicted_sentiment_indice, fill=predicted_sentiment_indice)) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
labs(title="Sentiment user.statuses_count") +
guides(fill=guide_legend("predicted sentiment")) +
ylab("class fraction within the group")
plot(gg2)
